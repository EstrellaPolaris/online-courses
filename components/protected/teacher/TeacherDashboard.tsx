// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã, —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ –¥–ª—è –¥–∞—à–±–æ—Ä–¥–∞ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è
// –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–∞—à–±–æ—Ä–¥–∞ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è

// online-courses/components/protected/teacher/TeacherDashboard.tsx
'use client';
// online-courses/components/protected/teacher/InstructorDashboard.tsx
import React, { useState, useEffect } from 'react';
import { CourseCard } from '../common/CourseCard';
import { Course, Notification } from '../../../types';
import Link from 'next/link';
import { useUser } from '../../../context/UserContext'; // <--- –ò–ú–ü–û–†–¢ useUser

export function TeacherDashboard() {
  const user = useUser(); // <--- –ü–û–õ–£–ß–ê–ï–ú –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø –ò–ó –ö–û–ù–¢–ï–ö–°–¢–ê
  const instructorId = user?.id; // <--- –ò–ó–í–õ–ï–ö–ê–ï–ú instructorId

  const [courses, setCourses] = useState<Course[]>([]);
  const [notifications, setNotifications] = useState<Notification[]>([]);
  const [loadingCourses, setLoadingCourses] = useState<boolean>(true);
  const [loadingNotifications, setLoadingNotifications] = useState<boolean>(true);
  const [errorCourses, setErrorCourses] = useState<string>('');
  const [errorNotifications, setErrorNotifications] = useState<string>('');
  // –£–î–ê–õ–ï–ù–´ useState –¥–ª—è instructorId –∏ useEffect –¥–ª—è fetchUser

  useEffect(() => {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ instructorId –¥–æ—Å—Ç—É–ø–µ–Ω, –ø—Ä–µ–∂–¥–µ —á–µ–º –¥–µ–ª–∞—Ç—å –∑–∞–ø—Ä–æ—Å—ã
    if (!instructorId) {
      console.warn('InstructorDashboard: instructorId –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω, –ø—Ä–æ–ø—É—Å–∫ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö.');
      return;
    }

    const fetchCourses = async () => {
      try {
        setLoadingCourses(true);
        const response = await fetch(`/api/courses?role=teacher&instructorId=${instructorId}`);
        if (!response.ok) throw new Error('Failed to fetch instructor courses');
        const data: Course[] = await response.json();
        setCourses(data.map((c: Course) => ({ ...c, students: Math.floor(Math.random() * 50) + 10 })));
      // eslint-disable-next-line @typescript-eslint/no-explicit-any
      } catch (err: any) {
        setErrorCourses(err instanceof Error ? err.message : String(err));
      } finally {
        setLoadingCourses(false);
      }
    };
    fetchCourses();

    const fetchNotifications = async () => {
      try {
        setLoadingNotifications(true);
        const mockNotifications: Notification[] = [
          { id: 1, text: '–ù–æ–≤–∞—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–∞ –∫—É—Ä—Å "–í–≤–µ–¥–µ–Ω–∏–µ –≤ Web3".', type: 'info' },
          { id: 2, text: '–û–∂–∏–¥–∞–µ—Ç—Å—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–¥–∞–Ω–∏—è –æ—Ç —Å—Ç—É–¥–µ–Ω—Ç–∞ –ò–≤–∞–Ω–æ–≤ –ê.–ê.', type: 'warning' },
        ];
        setNotifications(mockNotifications);
      // eslint-disable-next-line @typescript-eslint/no-explicit-any
      } catch (err: any) {
        setErrorNotifications(err instanceof Error ? err.message : String(err));
      } finally {
        setLoadingNotifications(false);
      }
    };
    fetchNotifications();
  }, [instructorId]); // <--- –ó–ê–í–ò–°–ò–ú–û–°–¢–¨ –û–¢ instructorId –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞

  return (
    <div className="grid grid-cols-1 lg:grid-cols-3 gap-8">
      {/* Welcome and notifications section */}
      <div className="lg:col-span-2 bg-white p-8 rounded-xl shadow-lg">
        <h2 className="text-4xl font-extrabold text-gray-800 mb-6">
          –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, <span className="text-green-700">–£–≤–∞–∂–∞–µ–º—ã–π –ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å!</span>
        </h2>
        <p className="text-lg text-gray-600 mb-8">
          –ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ —É–ø—Ä–∞–≤–ª—è—Ç—å —Å–≤–æ–∏–º–∏ –∫—É—Ä—Å–∞–º–∏, –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –∏ –ø–æ–ª—É—á–∞—Ç—å –≤–∞–∂–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è.
        </p>

        {/* Notifications section */}
        <div className="mb-8">
          <h3 className="text-2xl font-semibold text-gray-700 mb-4">
            <i className="lucide lucide-bell inline-block mr-2"></i> –í–∞—à–∏ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
          </h3>
          {loadingNotifications ? (
            <p className="text-gray-600">–ó–∞–≥—Ä—É–∑–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π...</p>
          ) : errorNotifications ? (
            <p className="text-red-600">–û—à–∏–±–∫–∞: {errorNotifications}</p>
          ) : notifications.length > 0 ? (
            <ul className="space-y-4">
              {notifications.map((notification: Notification) => (
                <li
                  key={notification.id}
                  className={`p-4 rounded-lg shadow-sm flex items-center ${
                    notification.type === 'info' ? 'bg-blue-50 border-l-4 border-blue-400' : 'bg-yellow-50 border-l-4 border-yellow-400'
                  }`}
                >
                  <span className="text-xl mr-3">
                    {notification.type === 'info' ? 'üí°' : '‚ö†Ô∏è'}
                  </span>
                  <p className="text-gray-700">{notification.text}</p>
                </li>
              ))}
            </ul>
          ) : (
            <p className="text-gray-500">–£ –≤–∞—Å –Ω–µ—Ç –Ω–æ–≤—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π.</p>
          )}
        </div>

        {/* My Courses section */}
        <div>
          <h3 className="text-2xl font-semibold text-gray-700 mb-4">
            <i className="lucide lucide-book-open inline-block mr-2"></i> –ú–æ–∏ –ö—É—Ä—Å—ã
          </h3>
          {loadingCourses ? (
            <p className="text-gray-600">–ó–∞–≥—Ä—É–∑–∫–∞ –∫—É—Ä—Å–æ–≤...</p>
          ) : errorCourses ? (
            <p className="text-red-600">–û—à–∏–±–∫–∞: {errorCourses}</p>
          ) : courses.length > 0 ? (
            <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
              {courses.map((course: Course) => (
                <CourseCard
                  key={course.id}
                  id={course.id}
                  title={course.title}
                  instructorId={course.instructorId}
                  status={course.status}
                  students={course.students}
                  image={`https://placehold.co/400x200/${Math.floor(Math.random()*16777215).toString(16)}/FFFFFF?text=–ö—É—Ä—Å`}
                />
              ))}
            </div>
          ) : (
            <p className="text-gray-500">–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö –∫—É—Ä—Å–æ–≤.</p>
          )}
        </div>
      </div>

      {/* Sidebar (quick links, calendar etc.) */}
      <div className="lg:col-span-1 space-y-8">
        {/* Quick Links */}
        <div className="bg-white p-8 rounded-xl shadow-lg">
          <h3 className="text-2xl font-semibold text-gray-700 mb-4">
            <i className="lucide lucide-link inline-block mr-2"></i> –ë—ã—Å—Ç—Ä—ã–µ –°—Å—ã–ª–∫–∏
          </h3>
          <ul className="space-y-3">
            <li>
              <Link href="/dashboard/teacher/materials" className="flex items-center text-green-600 hover:text-green-800 transition-colors duration-200">
                <i className="lucide lucide-folder-open mr-2"></i> –ú–æ–∏ –ú–∞—Ç–µ—Ä–∏–∞–ª—ã
              </Link>
            </li>
            <li>
              <Link href="/dashboard/teacher/students" className="flex items-center text-green-600 hover:text-green-800 transition-colors duration-200">
                <i className="lucide lucide-users mr-2"></i> –°—Ç—É–¥–µ–Ω—Ç—ã
              </Link>
            </li>
            <li>
              <Link href="#" className="flex items-center text-green-600 hover:text-green-800 transition-colors duration-200">
                <i className="lucide lucide-bar-chart-2 mr-2"></i> –ê–Ω–∞–ª–∏—Ç–∏–∫–∞
              </Link>
            </li>
            <li>
              <Link href="#" className="flex items-center text-green-600 hover:text-green-800 transition-colors duration-200">
                <i className="lucide lucide-mail mr-2"></i> –°–æ–æ–±—â–µ–Ω–∏—è
              </Link>
            </li>
          </ul>
        </div>

        {/* Upcoming Events */}
        <div className="bg-white p-8 rounded-xl shadow-lg">
          <h3 className="text-2xl font-semibold text-gray-700 mb-4">
            <i className="lucide lucide-calendar-check inline-block mr-2"></i> –ü—Ä–µ–¥—Å—Ç–æ—è—â–∏–µ –°–æ–±—ã—Ç–∏—è
          </h3>
          <ul className="space-y-4">
            <li className="border-b pb-3 border-gray-200 last:border-b-0">
              <p className="font-semibold text-gray-800">–í–µ–±–∏–Ω–∞—Ä: –ö–∞–∫ —Å–æ–∑–¥–∞–≤–∞—Ç—å –≤–æ–≤–ª–µ–∫–∞—é—â–∏–π –∫–æ–Ω—Ç–µ–Ω—Ç</p>
              <p className="text-sm text-gray-600">–î–ª—è –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π</p>
              <p className="text-xs text-gray-500">15 –ò—é–Ω—è, 16:00 –ú–°–ö</p>
            </li>
            <li className="border-b pb-3 border-gray-200 last:border-b-0">
              <p className="font-semibold text-gray-800">–í—Å—Ç—Ä–µ—á–∞ —Å –º–µ–Ω—Ç–æ—Ä–æ–º</p>
              <p className="text-sm text-gray-600">–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–∞—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è</p>
              <p className="text-xs text-gray-500">18 –ò—é–Ω—è, 11:00 –ú–°–ö</p>
            </li>
          </ul>
        </div>
      </div>
    </div>
  );
}